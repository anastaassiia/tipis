{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Григорьева Анастасия 3391 (Домашнее задание №1)"
      ],
      "metadata": {
        "id": "09puQK8m9WgV"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "uDmXPaAi_3Zg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install ucimlrepo\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "#Загрузка набора данных:\n",
        "from ucimlrepo import fetch_ucirepo\n",
        "\n",
        "# Получаем набор данных:\n",
        "adult = fetch_ucirepo(id=2)\n",
        "\n",
        "#Доступ к данным:\n",
        "df = adult.data.original\n",
        "\n",
        "# 1) Число столбцов в наборе данных:\n",
        "num_columns = df.shape[1]\n",
        "print(f\"1) Число столбцов: {num_columns}\")\n",
        "\n",
        "# 2) Проверка пропусков:\n",
        "missing_data = df.isnull().sum()\n",
        "missing_columns = missing_data[missing_data > 0]\n",
        "print(f\"\\n2) Пропуски в данных:\")\n",
        "for col, count in missing_columns.items():\n",
        "    print(f\"   {col}: {count} пропусков\")\n",
        "\n",
        "# 3) Уникальные значения в столбце race:\n",
        "unique_race = df['race'].nunique()\n",
        "print(f\"\\n3) Количество уникальных значений в столбце race: {unique_race}\")\n",
        "\n",
        "# 4) Медиана hours-per-week:\n",
        "median_hours = df['hours-per-week'].median()\n",
        "print(f\"\\n4) Медиана hours-per-week: {median_hours}\")\n",
        "\n",
        "# 5) Кого больше - женщин или мужчин с ЗП >50K:\n",
        "high_income_gender = df[df['income'] == '>50K']['sex'].value_counts()\n",
        "print(f\"\\n5) Распределение по полу с доходом >50K:\")\n",
        "for gender, count in high_income_gender.items():\n",
        "    print(f\"   {gender}: {count}\")\n",
        "\n",
        "more_gender = high_income_gender.index[0]\n",
        "print(f\"   Больше: {more_gender}\")\n",
        "\n",
        "# 6) Заполнение пропусков:\n",
        "print(f\"\\n6) Заполнение пропусков:\")\n",
        "\n",
        "#Создаем копию DataFrame для заполнения пропусков:\n",
        "df_filled = df.copy()\n",
        "\n",
        "#Заполняем пропуски наиболее частыми значениями:\n",
        "for column in df_filled.columns:\n",
        "    if df_filled[column].isnull().sum() > 0:\n",
        "        most_frequent = df_filled[column].mode()[0]\n",
        "        # Используем прямое присваивание вместо inplace=True\n",
        "        df_filled[column] = df_filled[column].fillna(most_frequent)\n",
        "        print(f\"   Столбец {column}: заполнено значением '{most_frequent}'\")\n",
        "\n",
        "print(\"\\nАльтернативные методы заполнения пропусков:\")\n",
        "print(\"- Медианой/средним для числовых данных\")\n",
        "\n",
        "#Проверка что пропуски заполнены:\n",
        "print(f\"\\nПропуски после заполнения: {df_filled.isnull().sum().sum()}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "piE3ceNG9fz1",
        "outputId": "c0be8810-e549-4604-cd20-c3c4847eb3a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: ucimlrepo in /usr/local/lib/python3.12/dist-packages (0.0.7)\n",
            "Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.12/dist-packages (from ucimlrepo) (2.2.2)\n",
            "Requirement already satisfied: certifi>=2020.12.5 in /usr/local/lib/python3.12/dist-packages (from ucimlrepo) (2025.8.3)\n",
            "Requirement already satisfied: numpy>=1.26.0 in /usr/local/lib/python3.12/dist-packages (from pandas>=1.0.0->ucimlrepo) (2.0.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas>=1.0.0->ucimlrepo) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas>=1.0.0->ucimlrepo) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas>=1.0.0->ucimlrepo) (2025.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.8.2->pandas>=1.0.0->ucimlrepo) (1.17.0)\n",
            "1) Число столбцов: 15\n",
            "\n",
            "2) Пропуски в данных:\n",
            "   workclass: 963 пропусков\n",
            "   occupation: 966 пропусков\n",
            "   native-country: 274 пропусков\n",
            "\n",
            "3) Количество уникальных значений в столбце race: 5\n",
            "\n",
            "4) Медиана hours-per-week: 40.0\n",
            "\n",
            "5) Распределение по полу с доходом >50K:\n",
            "   Male: 6662\n",
            "   Female: 1179\n",
            "   Больше: Male\n",
            "\n",
            "6) Заполнение пропусков:\n",
            "   Столбец workclass: заполнено значением 'Private'\n",
            "   Столбец occupation: заполнено значением 'Prof-specialty'\n",
            "   Столбец native-country: заполнено значением 'United-States'\n",
            "\n",
            "Альтернативные методы заполнения пропусков:\n",
            "- Медианой/средним для числовых данных\n",
            "\n",
            "Пропуски после заполнения: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1) Число столбцов в наборе данных - 15.\n",
        "2) Есть ли пропуски в данных? Если есть, то в каких столбцах - Да, есть, в workclass, occupation, native-country.\n",
        "3) Кол-во уникальных значений в столбце race - 5.\n",
        "4) Медиана hours-per-week - 40.0\n",
        "5) Кого больше - женщин или мужчин с ЗП >50K? - Мужчин.\n",
        "6) Заполните пропущенные данные в отдельных столбцах наиболее встречаемыми значениями. Как еще можно было бы заполнить пропущенные данные? - Заполнила. Альтернативные методы заполнения пропусков - медианой/средним для числовых данных."
      ],
      "metadata": {
        "id": "t7nHnlms9kAF"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "XoETHuQt9q5j"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
